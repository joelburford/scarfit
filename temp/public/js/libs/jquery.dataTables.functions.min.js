$.fn.dataTableExt.oApi.fnReloadAjax = function ( oSettings, sNewSource, fnCallback, bStandingRedraw )
{
  if ( typeof sNewSource != 'undefined' && sNewSource != null ) {
    oSettings.sAjaxSource = sNewSource;
  }

    // Server-side processing should just call fnDraw
    if ( oSettings.oFeatures.bServerSide ) {
      this.fnDraw();
      return;
    }

    this.oApi._fnProcessingDisplay( oSettings, true );
    var that = this;
    var iStart = oSettings._iDisplayStart;
    var aData = [];

    this.oApi._fnServerParams( oSettings, aData );

    oSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aData, function(json) {
      /* Clear the old information from the table */
      that.oApi._fnClearTable( oSettings );

      /* Got the data - add it to the table */
      var aData =  (oSettings.sAjaxDataProp !== "") ?
      that.oApi._fnGetObjectDataFn( oSettings.sAjaxDataProp )( json ) : json;

      for ( var i=0 ; i<aData.length ; i++ )
      {
        that.oApi._fnAddData( oSettings, aData[i] );
      }

      oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();

      if ( typeof bStandingRedraw != 'undefined' && bStandingRedraw === true )
      {
        oSettings._iDisplayStart = iStart;
        that.fnDraw( false );
      }
      else
      {
        that.fnDraw();
      }

      that.oApi._fnProcessingDisplay( oSettings, false );

      /* Callback user function - for event handlers etc */
      if ( typeof fnCallback == 'function' && fnCallback != null )
      {
        fnCallback( oSettings );
      }
    }, oSettings );
};

jQuery.extend( jQuery.fn.dataTableExt.oSort, {
    "file-size-pre": function ( a ) {
        var x = a.substring(0,a.length - 2);
             
        var x_unit = (a.substring(a.length - 2, a.length) == "MB" ?
            1000 : (a.substring(a.length - 2, a.length) == "GB" ? 1000000 : 1));
          
        return parseInt( x * x_unit, 10 );
    },
 
    "file-size-asc": function ( a, b ) {
        return ((a < b) ? -1 : ((a > b) ? 1 : 0));
    },
 
    "file-size-desc": function ( a, b ) {
        return ((a < b) ? 1 : ((a > b) ? -1 : 0));
    }
} );

jQuery.extend( jQuery.fn.dataTableExt.oSort, {
    "alt-string-pre": function ( a ) {
        var match = a.match(/alt="(.*?)"/);
        return match ? match[1].toLowerCase() : "";
    },
     
    "alt-string-asc": function( a, b ) {
        return ((a < b) ? -1 : ((a > b) ? 1 : 0));
    },
 
    "alt-string-desc": function(a,b) {
        return ((a < b) ? 1 : ((a > b) ? -1 : 0));
    }
} );